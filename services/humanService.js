// src/services/humanService.js
import { sendToMakeWebhook } from './makeService.js';
import * as notificationsService from './notificationsService.js';

/**
 * G√®re les cas o√π le client souhaite parler √† un agent humain.
 * @param {string} clientPhone - Num√©ro du client WhatsApp
 * @param {string} clientName - Nom du client
 * @param {string} message - Message original du client
 * @returns {Promise<string>} - Message de confirmation envoy√© au client
 */
export async function escalateToHuman(clientPhone, clientName = 'client', message = '') {
    try {
        const msg = `ü§ù Bonjour ${clientName}, votre demande a √©t√© transmise √† un agent humain üë®‚Äçüíº.\nVous serez contact√© tr√®s bient√¥t. Merci de votre patience !`;

        // Envoie la notification √† Make (pour transfert √† ton √©quipe)
        await sendToMakeWebhook(
            {
                phone: clientPhone,
                originalMessage: message,
                action: 'escalate_to_human'
            },
            'escalate_to_human'
        );

        // Journalise l‚Äô√©v√©nement
        await notificationsService.logNotification(clientPhone, msg, message, 'HumanEscalation');

        console.log(`üì© Escalade humaine envoy√©e pour ${clientPhone}`);
        return msg;
    } catch (err) {
        console.error('‚ùå Erreur lors de la redirection vers un agent humain :', err);
        throw err;
    }
}