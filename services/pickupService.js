// src/services/pickupService.js
import { sendToMakeWebhook } from './makeService.js';
import * as notificationsService from './notificationsService.js';

/**
 * G√®re les demandes de ramassage √† domicile envoy√©es par les clients via WhatsApp.
 *
 * @param {string} clientPhone - Num√©ro du client (WhatsApp)
 * @param {string} clientName - Nom du client (si disponible)
 * @returns {Promise<string>} - Message de confirmation envoy√© au client
 */
export async function handlePickupRequest(clientPhone, clientName = 'cher client') {
  if (!clientPhone) {
    console.warn('‚ö†Ô∏è handlePickupRequest ignor√© : num√©ro de t√©l√©phone manquant.');
    return 'Num√©ro de t√©l√©phone non valide.';
  }

  try {
    const msg = `üëï Bonjour ${clientName}, votre demande de *ramassage √† domicile* a bien √©t√© enregistr√©e. üöö\n\nNotre livreur vous contactera tr√®s bient√¥t pour convenir du passage.\nMerci pour votre confiance üôè.`;

    // 1Ô∏è‚É£ Envoie la confirmation au client via Make
    const response = await sendToMakeWebhook(
      { phone: clientPhone, message: msg },
      'send_pickup_confirmation'
    );

    if (response?.ok === false) {
      console.warn(`‚ö†Ô∏è Make n‚Äôa pas confirm√© l‚Äôenvoi du message √† ${clientPhone}.`);
    }

    // 2Ô∏è‚É£ Journalise la notification localement et dans Make
    await notificationsService.logNotification(clientPhone, msg, null, 'Pickup');

    console.log(`‚úÖ Ramassage confirm√© pour ${clientPhone}`);
    return msg;

  } catch (err) {
    console.error('‚ùå Erreur lors du traitement du ramassage :', err.message || err);
    return `D√©sol√© ${clientName}, une erreur est survenue lors de votre demande de ramassage.`;
  }
}
